{"version":3,"sources":["components/MovieCard.jsx","pages/HomePage.jsx","pages/MovieDetails.jsx","components/Header.jsx","components/Footer.jsx","pages/TopRatedPage.jsx","pages/NowPlayingPage.jsx","pages/PopularPage.jsx","pages/LoginPage.jsx","pages/RegisterPage.jsx","App.jsx","index.js"],"names":["MovieCard","_ref","movie","_jsx","className","children","_jsxs","Link","to","id","src","image_url","alt","title","overview","release_date","rating","API_BASE_URL","API_MOVIES_URL","API_USER_INFO_URL","API_AVATAR_UPLOAD_URL","avatarStyle","width","height","borderRadius","objectFit","cursor","border","display","verticalAlign","marginLeft","HomePage","movies","setMovies","useState","loading","setLoading","error","setError","searchTerm","setSearchTerm","isLoggedIn","setIsLoggedIn","userAvatar","setUserAvatar","isLoadingAvatar","setIsLoadingAvatar","fileInputRef","useRef","fetchMovies","useHistory","async","response","axios","get","data","err","console","fetchUserInfo","headers","Authorization","token","avatar_url","_error$response","status","handleLogout","useEffect","localStorage","getItem","Promise","all","catch","finally","filteredMovies","filter","toLowerCase","includes","removeItem","style","textAlign","marginTop","color","_Fragment","justifyContent","alignItems","marginBottom","padding","flexGrow","marginRight","type","placeholder","value","onChange","event","target","boxSizing","gap","backgroundColor","onClick","handleAvatarClick","current","click","onError","e","ref","file","files","startsWith","alert","formData","FormData","append","post","log","_error$response2","_error$response2$data","_error$response3","detail","message","accept","textDecoration","length","map","MovieDetails","useParams","setMovie","fetchMovieDetails","description","genres","join","creator","actors","actor","index","photo_url","name","Header","Footer","Date","getFullYear","TopRatedPage","NowPlayingPage","PopularPage","LoginPage","username","setUsername","password","setPassword","history","maxWidth","margin","onSubmit","preventDefault","URLSearchParams","access_token","Error","setItem","push","_err$response","_err$response$data","errorMessage","htmlFor","required","disabled","href","RegisterPage","email","setEmail","success","setSuccess","userData","setTimeout","request","minLength","App","Router","Switch","Route","exact","path","component","ReactDOM","createRoot","document","getElementById","render","React","StrictMode"],"mappings":"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","file":"static/js/main.0decff61.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nconst MovieCard = ({ movie }) => {\r\n  return (\r\n    <div className=\"movie-card\">\r\n      <Link to={`/movies/${movie.id}`}>\r\n      <img src={movie.image_url} alt={movie.title} className=\"movie-poster\" />\r\n      <h3 className=\"movie-title\">{movie.title}</h3>\r\n      <p className=\"movie-overview\">{movie.overview}</p>\r\n      <p className=\"movie-release-date\">Data: {movie.release_date}</p>\r\n      <p className=\"movie-vote-average\">TMDB: {movie.rating} %</p>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieCard;","import React, { useEffect, useState, useRef } from 'react'; // Добавляем useRef\r\nimport MovieCard from '../components/MovieCard';\r\nimport axios from 'axios';\r\nimport { Link, useHistory } from 'react-router-dom'; // Добавляем useHistory для выхода\r\n\r\n// --- URL API (используем порт 9000) ---\r\nconst API_BASE_URL = 'http://127.0.0.1:9000/api';\r\nconst API_MOVIES_URL = `${API_BASE_URL}/movies/`;\r\nconst API_USER_INFO_URL = `${API_BASE_URL}/auth/users/me`;\r\nconst API_AVATAR_UPLOAD_URL = `${API_BASE_URL}/users/me/avatar`; // Убедись, что этот эндпоинт существует на бэкенде\r\n\r\n// --- Стили для аватарки ---\r\nconst avatarStyle = {\r\n    width: '40px',\r\n    height: '40px',\r\n    borderRadius: '50%',\r\n    objectFit: 'cover',\r\n    cursor: 'pointer',\r\n    border: '2px solid #ccc',\r\n    display: 'inline-block',\r\n    verticalAlign: 'middle',\r\n    marginLeft: '15px' // Отступ слева\r\n};\r\n\r\nconst HomePage = () => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [loading, setLoading] = useState(true); // Загрузка фильмов\r\n  const [error, setError] = useState(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  // --- Состояния для аутентификации и аватара ---\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [userAvatar, setUserAvatar] = useState(null);\r\n  const [isLoadingAvatar, setIsLoadingAvatar] = useState(false); // Загрузка файла аватара\r\n  const fileInputRef = useRef(null);\r\n  const history = useHistory(); // Для выхода\r\n\r\n  // --- Функция загрузки фильмов ---\r\n  const fetchMovies = async () => {\r\n    // setLoading(true); // Уже устанавливается при инициализации\r\n    setError(null);\r\n    try {\r\n      const response = await axios.get(API_MOVIES_URL);\r\n      setMovies(response.data);\r\n    } catch (err) {\r\n      console.error('Error fetching movies:', err);\r\n      setError('Ошибка при загрузке фильмов');\r\n    } finally {\r\n      setLoading(false); // Выключаем общую загрузку здесь\r\n    }\r\n  };\r\n\r\n  // --- Функция загрузки данных пользователя ---\r\n   const fetchUserInfo = async (token) => {\r\n        // Не показываем отдельную загрузку для аватара при первой загрузке страницы\r\n        try {\r\n            const response = await axios.get(API_USER_INFO_URL, {\r\n                headers: { Authorization: `Bearer ${token}` }\r\n            });\r\n            // Предполагаем поле avatar_url в ответе\r\n            if (response.data.avatar_url) {\r\n                setUserAvatar(response.data.avatar_url);\r\n            } else {\r\n                 setUserAvatar('/img/default-avatar.png'); // Замени на свой путь к дефолтной аватарке\r\n            }\r\n        } catch (error) {\r\n            console.error('Ошибка загрузки данных пользователя:', error);\r\n             setUserAvatar('/img/default-avatar.png'); // Ставим дефолтную при ошибке\r\n             if (error.response?.status === 401) {\r\n                 handleLogout(); // Разлогиниваем, если токен невалиден\r\n             }\r\n        }\r\n    };\r\n\r\n  // --- Загрузка фильмов и проверка статуса входа при монтировании ---\r\n  useEffect(() => {\r\n    setLoading(true); // Включаем общую загрузку\r\n    const token = localStorage.getItem('accessToken');\r\n    if (token) {\r\n        setIsLoggedIn(true);\r\n        // Параллельно загружаем фильмы и информацию о пользователе\r\n        Promise.all([fetchMovies(), fetchUserInfo(token)])\r\n            .catch(err => console.error('Ошибка при параллельной загрузке:', err)) // Ловим общую ошибку, если нужно\r\n            .finally(() => setLoading(false)); // Выключаем общую загрузку после всего\r\n    } else {\r\n        setIsLoggedIn(false);\r\n        setUserAvatar(null);\r\n        fetchMovies(); // Просто загружаем фильмы, если не залогинен\r\n    }\r\n  }, []); // Пустой массив - выполняется один раз\r\n\r\n  // --- Обработчик поиска ---\r\n  const handleSearchChange = (event) => {\r\n    setSearchTerm(event.target.value);\r\n  };\r\n\r\n  // --- Фильтрация фильмов ---\r\n  const filteredMovies = movies.filter((movie) =>\r\n    movie.title.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  // --- Обработчик выхода ---\r\n   const handleLogout = () => {\r\n        localStorage.removeItem('accessToken');\r\n        setIsLoggedIn(false);\r\n        setUserAvatar(null);\r\n        // Можно просто обновить состояние, не перезагружая страницу\r\n        // history.push('/'); // Если нужно перейти на главную\r\n        // Вместо window.location.reload() просто обновляем состояние:\r\n        // Компонент перерисуется сам из-за изменения isLoggedIn\r\n   };\r\n\r\n  // --- Обработчик клика по аватарке ---\r\n  const handleAvatarClick = () => {\r\n    if (fileInputRef.current) {\r\n      fileInputRef.current.click();\r\n    }\r\n  };\r\n\r\n  // --- Обработчик выбора файла ---\r\n  const handleFileChange = async (event) => {\r\n    const file = event.target.files[0];\r\n    if (!file) return;\r\n    if (!file.type.startsWith('image/')) {\r\n      alert('Пожалуйста, выберите изображение.');\r\n      return;\r\n    }\r\n\r\n    setIsLoadingAvatar(true); // Включаем индикатор загрузки аватара\r\n    const token = localStorage.getItem('accessToken');\r\n    if (!token) {\r\n      console.error('Нет токена для загрузки аватара');\r\n      setIsLoadingAvatar(false);\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n\r\n    try {\r\n      const response = await axios.post(API_AVATAR_UPLOAD_URL, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      }); \r\n      if (response.data.avatar_url) {\r\n        setUserAvatar(response.data.avatar_url);\r\n        console.log('Аватар успешно обновлен!');\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка загрузки аватара:', error);\r\n      alert(`Не удалось загрузить аватар: ${error.response?.data?.detail || error.message}`);\r\n      if (error.response?.status === 401) {\r\n        handleLogout();\r\n      }\r\n    } finally {\r\n      setIsLoadingAvatar(false); // Выключаем индикатор загрузки аватара\r\n      if (fileInputRef.current) {\r\n        fileInputRef.current.value = '';\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  // --- Условный рендеринг для общей загрузки и ошибок ---\r\n  if (loading) {\r\n    return <div className=\"container\" style={{ textAlign: 'center', marginTop: '50px' }}>Загрузка...</div>;\r\n  }\r\n  // Ошибку загрузки фильмов показываем только если она есть\r\n  if (error && !loading) {\r\n    return <div className=\"container\" style={{ textAlign: 'center', marginTop: '50px', color: 'red' }}>{error}</div>;\r\n  }\r\n\r\n  // --- Основной рендеринг ---\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        {/* --- Search and Auth Section --- */}\r\n        <div className=\"top-controls\" style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '20px', marginTop: '20px', padding: '0 15px' }}>\r\n          {/* --- Search bar --- */}\r\n          <div className=\"search-bar\" style={{ flexGrow: 1, marginRight: '20px' }}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Wyszukaj filmy według tytułu...\"\r\n              value={searchTerm}\r\n              onChange={handleSearchChange}\r\n              style={{ padding: '10px', width: '100%', boxSizing: 'border-box' }}\r\n            />\r\n          </div>\r\n\r\n          {/* --- Auth Section (Avatar or Links) --- */}\r\n          <div className=\"auth-section\" style={{ display: 'flex', alignItems: 'center', gap: '10px' }}>\r\n            {isLoggedIn ? (\r\n              <>\r\n                {/* Аватарка или индикатор загрузки */}\r\n                {isLoadingAvatar ? (\r\n                  <div style={{ ...avatarStyle, display: 'flex', justifyContent: 'center', alignItems: 'center', backgroundColor: '#f0f0f0', cursor: 'default' }}>...</div>\r\n                ) : (\r\n                  <img\r\n                    src={userAvatar || '/img/default-avatar.png'} // Замени путь!\r\n                    alt=\"Аватар\"\r\n                    style={avatarStyle}\r\n                    onClick={handleAvatarClick}\r\n                    onError={(e) => { e.target.src = '/img/default-avatar.png'; }} // Замени путь!\r\n                  />\r\n                )}\r\n                {/* Скрытый input */}\r\n                <input\r\n                  type=\"file\"\r\n                  ref={fileInputRef}\r\n                  onChange={handleFileChange}\r\n                  style={{ display: 'none' }}\r\n                  accept=\"image/*\"\r\n                />\r\n                {/* Кнопка выхода */}\r\n                <button onClick={handleLogout} style={{ padding: '8px 12px' }}>Wyloguj się</button>\r\n              </>\r\n            ) : (\r\n              <>\r\n                {/* Ссылки Войти/Регистрация */}\r\n                <Link to=\"/login\" style={{ textDecoration: 'none', padding: '8px 12px', border: '1px solid #ccc', borderRadius: '4px' }}>\r\n                Zaloguj się\r\n                </Link>\r\n                <Link to=\"/register\" style={{ textDecoration: 'none', padding: '8px 12px', backgroundColor: '#007bff', color: 'white', border: '1px solid #007bff', borderRadius: '4px' }}>\r\n                Zarejestruj się\r\n                </Link>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Movie grid */}\r\n        <div className=\"movie-grid\">\r\n          {filteredMovies.length > 0 ? (\r\n            filteredMovies.map((movie) => (\r\n              <MovieCard key={movie.id} movie={movie} />\r\n            ))\r\n          ) : (\r\n            <p style={{ textAlign: 'center', width: '100%' }}>\r\n              {movies.length > 0 ? `По вашему запросу \"${searchTerm}\" ничего не найдено.` : 'Фильмы не найдены.'}\r\n            </p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst MovieDetails = () => {\r\n  const { id } = useParams(); // Pobieranie ID filmu z URL\r\n  const [movie, setMovie] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Funkcja do pobierania danych o filmie\r\n  const fetchMovieDetails = async () => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:9000/api/movies/${id}`);\r\n      setMovie(response.data);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      setError('Błąd podczas ładowania danych o filmie');\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchMovieDetails();\r\n  }, [id]);\r\n\r\n  if (loading) {\r\n    return <div>Ładowanie...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>{error}</div>;\r\n  }\r\n\r\n  if (!movie) {\r\n    return <div>Film nie znaleziony</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container movie-details\">\r\n      <img src={movie.image_url} alt={movie.title} />\r\n      <div className=\"movie-details-content\">\r\n        <h1>{movie.title}</h1>\r\n        <p>{movie.description}</p>\r\n        <p>Ocena: {movie.rating}</p>\r\n        <p>Gatunki: {movie.genres.join(', ')}</p>\r\n        <p>Twórca: {movie.creator}</p>\r\n      </div>\r\n      <div className=\"movie-actors\">\r\n        <h2>Aktorzy:</h2>\r\n        <ul>\r\n          {movie.actors.map((actor, index) => (\r\n            <li key={index}>\r\n              <img src={actor.photo_url} alt={actor.name} />\r\n              <p>{actor.name}</p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieDetails;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <div className=\"container\">\r\n        <nav>\r\n          <ul className=\"nav-menu\">\r\n            <li>\r\n              <Link to=\"/\">Strona główna</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/popular\">Popularne</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/top-rated\">Najwyżej oceniane</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/now-playing\">Obecnie w kinach</Link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <div className=\"container\">\r\n        <p>\r\n          &copy; {new Date().getFullYear()} My Movie App. Wszelkie prawa zastrzeżone.\r\n        </p>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;","import React, { useEffect, useState } from 'react';\r\nimport MovieCard from '../components/MovieCard';\r\nimport axios from 'axios';\r\n\r\nconst TopRatedPage = () => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchMovies = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:9000/api/movies/top-rated/');\r\n        setMovies(response.data);\r\n      } catch (err) {\r\n        setError('Error loading movies');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchMovies();\r\n  }, []);\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>{error}</div>;\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Top Rated Movies</h1>\r\n      <div className=\"movie-grid\">\r\n        {movies.map((movie) => (\r\n          <MovieCard key={movie.id} movie={movie} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopRatedPage;","import React, { useEffect, useState } from 'react';\r\nimport MovieCard from '../components/MovieCard';\r\nimport axios from 'axios';\r\n\r\nconst NowPlayingPage = () => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchMovies = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:9000/api/movies/now-playing/');\r\n        setMovies(response.data);\r\n      } catch (err) {\r\n        setError('Error loading movies');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchMovies();\r\n  }, []);\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>{error}</div>;\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Now Playing Movies</h1>\r\n      <div className=\"movie-grid\">\r\n        {movies.map((movie) => (\r\n          <MovieCard key={movie.id} movie={movie} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NowPlayingPage;","import React, { useEffect, useState } from 'react';\r\nimport MovieCard from '../components/MovieCard';\r\nimport axios from 'axios';\r\n\r\nconst PopularPage = () => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchMovies = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:9000/api/movies/popular/');\r\n        setMovies(response.data);\r\n      } catch (err) {\r\n        setError('Error loading movies');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchMovies();\r\n  }, []);\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>{error}</div>;\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Popular Movies</h1>\r\n      <div className=\"movie-grid\">\r\n        {movies.map((movie) => (\r\n          <MovieCard key={movie.id} movie={movie} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PopularPage;","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom'; // Импорт правильный\r\n\r\n// Используем правильный URL твоего бэкенда\r\nconst API_LOGIN_URL = 'http://127.0.0.1:9000/api/auth/token';\r\n\r\nfunction LoginPage() {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    // --- Исправляем имя переменной ---\r\n    const history = useHistory();\r\n    // const { login } = useContext(AuthContext); // Закомментировано, пока нет контекста\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        setError('');\r\n        setLoading(true);\r\n\r\n        const formData = new URLSearchParams();\r\n        formData.append('username', username);\r\n        formData.append('password', password);\r\n\r\n        try {\r\n            const response = await axios.post(API_LOGIN_URL, formData, {\r\n                headers: {\r\n                    'Content-Type': 'application/x-www-form-urlencoded',\r\n                },\r\n            });\r\n\r\n            const token = response.data.access_token;\r\n\r\n            if (token) {\r\n                localStorage.setItem('accessToken', token);\r\n                console.log('Вход успешен, токен сохранен.');\r\n                // login(token); // Закомментировано\r\n                // --- Исправляем вызов навигации ---\r\n                history.push('/'); // Перенаправление на главную\r\n\r\n            } else {\r\n                throw new Error('Токен не получен от сервера');\r\n            }\r\n\r\n        } catch (err) {\r\n            console.error('Ошибка входа:', err);\r\n            const errorMessage = err.response?.data?.detail || err.message || 'Произошла ошибка при входе.';\r\n            setError(errorMessage);\r\n            localStorage.removeItem('accessToken');\r\n            // logout(); // Закомментировано\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        // --- JSX разметка остается без изменений ---\r\n        <div className=\"container auth-container\" style={{ maxWidth: '400px', margin: '50px auto', padding: '20px', border: '1px solid #ccc', borderRadius: '5px' }}>\r\n            <h2>Вход</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <div style={{ marginBottom: '15px' }}>\r\n                    <label htmlFor=\"loginUsername\" style={{ display: 'block', marginBottom: '5px' }}>Имя пользователя или Email:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"loginUsername\"\r\n                        value={username}\r\n                        onChange={(e) => setUsername(e.target.value)}\r\n                        required\r\n                        disabled={loading}\r\n                        style={{ width: '100%', padding: '8px', boxSizing: 'border-box' }}\r\n                    />\r\n                </div>\r\n                <div style={{ marginBottom: '15px' }}>\r\n                    <label htmlFor=\"loginPassword\" style={{ display: 'block', marginBottom: '5px' }}>Пароль:</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        id=\"loginPassword\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        required\r\n                        disabled={loading}\r\n                        style={{ width: '100%', padding: '8px', boxSizing: 'border-box' }}\r\n                    />\r\n                </div>\r\n                {error && <p style={{ color: 'red', marginTop: '10px' }}>{error}</p>}\r\n                <button\r\n                    type=\"submit\"\r\n                    disabled={loading}\r\n                     style={{ width: '100%', padding: '10px', backgroundColor: '#28a745', color: 'white', border: 'none', borderRadius: '3px', cursor: 'pointer' }}\r\n                >\r\n                    {loading ? 'Вход...' : 'Войти'}\r\n                </button>\r\n            </form>\r\n             <p style={{ textAlign: 'center', marginTop: '15px' }}>\r\n                Нет аккаунта? <a href=\"/register\">Зарегистрироваться</a> {/* Замени на Link, если нужно */}\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginPage;\r\n","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n// --- Меняем порт на 9000 ---\r\nconst API_REGISTER_URL = 'http://127.0.0.1:9000/api/auth/register';\r\n\r\nfunction RegisterPage() {\r\n    const [username, setUsername] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [success, setSuccess] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const history = useHistory();\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        setError('');\r\n        setSuccess('');\r\n        setLoading(true);\r\n\r\n        const userData = { username, email, password };\r\n\r\n        try {\r\n            // Запрос теперь пойдет на порт 9000\r\n            const response = await axios.post(API_REGISTER_URL, userData, {\r\n                 headers: { 'Content-Type': 'application/json' }\r\n            });\r\n\r\n            setSuccess(`Пользователь ${response.data.username} успешно зарегистрирован! Перенаправление на страницу входа...`);\r\n            setUsername('');\r\n            setEmail('');\r\n            setPassword('');\r\n\r\n            setTimeout(() => {\r\n                history.push('/login');\r\n            }, 2000);\r\n\r\n        } catch (err) {\r\n            console.error('Ошибка регистрации:', err);\r\n            // Проверяем, есть ли ответ от сервера вообще (при Network Error его может не быть)\r\n            if (err.response) {\r\n                // Ошибка от API (например, 400 Bad Request)\r\n                const errorMessage = err.response.data?.detail || 'Произошла ошибка при регистрации.';\r\n                setError(errorMessage);\r\n            } else if (err.request) {\r\n                // Запрос был сделан, но ответ не получен (Network Error)\r\n                setError('Не удалось подключиться к серверу. Проверьте соединение или адрес API.');\r\n            } else {\r\n                // Другая ошибка (например, при настройке запроса)\r\n                setError('Произошла непредвиденная ошибка.');\r\n            }\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n     return (\r\n        // --- JSX разметка остается без изменений ---\r\n        <div className=\"container auth-container\" style={{ maxWidth: '400px', margin: '50px auto', padding: '20px', border: '1px solid #ccc', borderRadius: '5px' }}>\r\n            <h2>Регистрация</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <div style={{ marginBottom: '15px' }}>\r\n                    <label htmlFor=\"regUsername\" style={{ display: 'block', marginBottom: '5px' }}>Имя пользователя:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"regUsername\"\r\n                        value={username}\r\n                        onChange={(e) => setUsername(e.target.value)}\r\n                        required\r\n                        disabled={loading}\r\n                        style={{ width: '100%', padding: '8px', boxSizing: 'border-box' }}\r\n                    />\r\n                </div>\r\n                 <div style={{ marginBottom: '15px' }}>\r\n                    <label htmlFor=\"regEmail\" style={{ display: 'block', marginBottom: '5px' }}>Email:</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        id=\"regEmail\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        required\r\n                        disabled={loading}\r\n                        style={{ width: '100%', padding: '8px', boxSizing: 'border-box' }}\r\n                    />\r\n                </div>\r\n                <div style={{ marginBottom: '15px' }}>\r\n                    <label htmlFor=\"regPassword\" style={{ display: 'block', marginBottom: '5px' }}>Пароль:</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        id=\"regPassword\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        required\r\n                        minLength={6}\r\n                        disabled={loading}\r\n                        style={{ width: '100%', padding: '8px', boxSizing: 'border-box' }}\r\n                    />\r\n                </div>\r\n                {error && <p style={{ color: 'red', marginTop: '10px' }}>{error}</p>}\r\n                {success && <p style={{ color: 'green', marginTop: '10px' }}>{success}</p>}\r\n                <button\r\n                    type=\"submit\"\r\n                    disabled={loading}\r\n                    style={{ width: '100%', padding: '10px', backgroundColor: '#007bff', color: 'white', border: 'none', borderRadius: '3px', cursor: 'pointer' }}\r\n                >\r\n                    {loading ? 'Регистрация...' : 'Зарегистрироваться'}\r\n                </button>\r\n            </form>\r\n             <p style={{ textAlign: 'center', marginTop: '15px' }}>\r\n                Уже есть аккаунт? <a href=\"/login\">Войти</a> {/* Замени на Link, если нужно */}\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RegisterPage;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\nimport HomePage from './pages/HomePage';\r\nimport MovieDetails from './pages/MovieDetails';\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\nimport TopRatedPage from './pages/TopRatedPage';\r\nimport NowPlayingPage from './pages/NowPlayingPage';\r\nimport PopularPage from './pages/PopularPage';\r\nimport LoginPage from './pages/LoginPage';\r\nimport RegisterPage from './pages/RegisterPage';\r\n\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      {/* Передаем информацию о текущем пользователе в Header, если нужно */}\r\n      <Header />\r\n      <Switch> {/* Switch рендерит первый совпавший Route */}\r\n        <Route exact path=\"/\" component={HomePage} />\r\n        <Route path=\"/movies/:id\" component={MovieDetails} />\r\n        <Route path=\"/top-rated\" component={TopRatedPage} />\r\n        <Route path=\"/now-playing\" component={NowPlayingPage} />\r\n        <Route path=\"/popular\" component={PopularPage} />\r\n        {/* --- Добавляем маршруты для входа и регистрации --- */}\r\n        <Route path=\"/login\" component={LoginPage} />\r\n        <Route path=\"/register\" component={RegisterPage} />\r\n        {/* Можно добавить маршрут для 404 страницы в конце */}\r\n      </Switch>\r\n      <Footer />\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './App';\r\nimport './index.css'; // Подключение глобальных стилей\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);"],"sourceRoot":""}